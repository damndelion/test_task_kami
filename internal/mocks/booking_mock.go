// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/booking.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/damndelion/test_task_kami/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIBookingService is a mock of IBookingService interface.
type MockIBookingService struct {
	ctrl     *gomock.Controller
	recorder *MockIBookingServiceMockRecorder
}

// MockIBookingServiceMockRecorder is the mock recorder for MockIBookingService.
type MockIBookingServiceMockRecorder struct {
	mock *MockIBookingService
}

// NewMockIBookingService creates a new mock instance.
func NewMockIBookingService(ctrl *gomock.Controller) *MockIBookingService {
	mock := &MockIBookingService{ctrl: ctrl}
	mock.recorder = &MockIBookingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBookingService) EXPECT() *MockIBookingServiceMockRecorder {
	return m.recorder
}

// CreateReservation mocks base method.
func (m *MockIBookingService) CreateReservation(ctx context.Context, input models.BookingCreate) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReservation", ctx, input)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReservation indicates an expected call of CreateReservation.
func (mr *MockIBookingServiceMockRecorder) CreateReservation(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReservation", reflect.TypeOf((*MockIBookingService)(nil).CreateReservation), ctx, input)
}

// GetReservationByRoomID mocks base method.
func (m *MockIBookingService) GetReservationByRoomID(ctx context.Context, roomID string) ([]models.BookingDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReservationByRoomID", ctx, roomID)
	ret0, _ := ret[0].([]models.BookingDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReservationByRoomID indicates an expected call of GetReservationByRoomID.
func (mr *MockIBookingServiceMockRecorder) GetReservationByRoomID(ctx, roomID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReservationByRoomID", reflect.TypeOf((*MockIBookingService)(nil).GetReservationByRoomID), ctx, roomID)
}
