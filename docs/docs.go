// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/bookings": {
            "post": {
                "description": "Create a reservation for a room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new reservation",
                "parameters": [
                    {
                        "description": "BookingCreate - RoomID is required. StartTime and EndTime must be in the format YYYY-MM-DD-hh:mm:ss and are required.",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookingCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/bookings/{roomID}": {
            "get": {
                "description": "Retrieve all reservations for a specific room",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookings"
                ],
                "summary": "Get reservations by room ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "roomID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BookingDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BookingCreate": {
            "type": "object",
            "required": [
                "end_time",
                "room_id",
                "start_time"
            ],
            "properties": {
                "end_time": {
                    "description": "YYYY-MM-DD-hh:mm:ss format",
                    "type": "string"
                },
                "room_id": {
                    "type": "string"
                },
                "start_time": {
                    "description": "YYYY-MM-DD-hh:mm:ss format",
                    "type": "string"
                }
            }
        },
        "models.BookingDTO": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "room": {
                    "$ref": "#/definitions/models.RoomDTO"
                },
                "room_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "models.RoomDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "room_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "test_task_kami",
	Description:      "API Server for test_task_kami",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
